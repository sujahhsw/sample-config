
#####
## See here: http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
##

## FOR DEV ONLY WE ACTIVATE THE local PROFILE
spring.profiles.active=ote

#####
## CSP Specific configuration
##
magentoservice.url='{cipher}ff34ef838565ef1250b6cd1320b4b43e8fad972ddc1c9ea16bcdb65a94f517af8610ef2bd683c9bfd3578d10d2e6d6a846625ac1bbd24d4aa7d4876f3eac92c9'
magentoservice.username=api
magentoservice.password='{cipher}d273894bbbd7bce0104553900f3bb67eedc4cc2ff938799fe6ec9b7528965aca'
magento.inbound.request.auth.username=magento
magento.inbound.request.auth.password='{cipher}07f2e8614947f8a79d454a1d2c3b43e2ae390b44322786f47244be82974f670d'
fixture.auth.username=fixturesUser
fixture.auth.password=fixtures

api.profile=NOT SET

#####
## Stuff - collection of random springy properties
##

server.port=8081
server.tomcat.max-http-header-size=4096
spring.pidfile=/tmp/userapi.pid

#####
## Logging configuration
##

logging.level.org.springframework: INFO
logging.level.uk.co.os: DEBUG

## All possible properties
# logging.path=/var/logs
# logging.file=csp-userapi.log
# logging.config= # location of config file (default classpath:logback.xml for logback)
# logging.level.*= # levels for loggers, e.g. "logging.level.org.springframework=DEBUG" (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)

#####
## DataSource configuration
##

# This is the one place to define the hostname of the PostgrSQL server.
dbhost='{cipher}119703ca8d3ab2125e916c6dac05224277bf45a28ea02f5eee978190a93034d4'

spring.datasource.url=jdbc:postgresql://${dbhost}/csp
spring.datasource.username=csp_user
spring.datasource.password='{cipher}95e03522a09fdc9310f32f267962f1ed7460206976e413f2319c581fafabd2ab'
spring.datasource.driverClassName=org.postgresql.Driver

## All possible properties
# spring.datasource.name= # name of the data source
# spring.datasource.initialize=true # populate using data.sql
# spring.datasource.schema= # a schema (DDL) script resource reference
# spring.datasource.data= # a data (DML) script resource reference
# spring.datasource.sql-script-encoding= # a charset for reading SQL scripts
# spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql)
# spring.datasource.continue-on-error=false # continue even if can't be initialized
# spring.datasource.separator=; # statement separator in SQL initialization scripts
# spring.datasource.driver-class-name= # JDBC Settings...
# spring.datasource.url=
# spring.datasource.username=
# spring.datasource.password=
# spring.datasource.jndi-name= # For JNDI lookup (class, url, username & password are ignored when set)
# spring.datasource.max-active=100 # Advanced configuration...
# spring.datasource.max-idle=8
# spring.datasource.min-idle=8
# spring.datasource.initial-size=10
# spring.datasource.validation-query=
# spring.datasource.test-on-borrow=false
# spring.datasource.test-on-return=false
# spring.datasource.test-while-idle=
# spring.datasource.time-between-eviction-runs-millis=
# spring.datasource.min-evictable-idle-time-millis=
# spring.datasource.max-wait=
# spring.datasource.jmx-enabled=false # Export JMX MBeans (if supported)


#####
## JPA Configuration
##

spring.jpa.hibernate.ddl-auto: none
spring.jpa.hibernate.naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.database: postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql: true

## All possible properties
# spring.jpa.properties.*= # properties to set on the JPA connection
# spring.jpa.open-in-view=true
# spring.jpa.show-sql=true
# spring.jpa.database-platform=
# spring.jpa.database=
# spring.jpa.generate-ddl=false # ignored by Hibernate, might be useful for other vendors
# spring.jpa.hibernate.naming-strategy= # naming classname
# spring.jpa.hibernate.ddl-auto=
# spring.data.jpa.repositories.enabled=true # if spring data repository support is enabled

#####
## FLYWAY (FlywayProperties)
##

flyway.url=jdbc:postgresql://${dbhost}/csp
flyway.user=csp_admin
flyway.password='{cipher}ad37c59ceb1199d46775d633a18a46e5f53fd04ad14871db28ae9baa38748f6c'
flyway.schemas=entitlementstore

## All possible properties
# flyway.check-location=false # check that migration scripts location exists
# flyway.locations=classpath:db/migration # locations of migration scripts
# flyway.schemas= # schemas to update
# flyway.init-version= 1 # version to start migration
# flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it
# flyway.sql-migration-prefix=V
# flyway.sql-migration-suffix=.sql
# flyway.enabled=true
# flyway.url= # JDBC url if you want Flyway to create its own DataSource
# flyway.user= # JDBC username if you want Flyway to create its own DataSource
# flyway.password= # JDBC password if you want Flyway to create its own DataSource

